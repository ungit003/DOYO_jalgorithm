import java.util.Scanner;

public class Boj_2239 {
    static int[][] board = new int[9][9]; // 9x9 스도쿠 판

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // 스도쿠 입력 받기
        for (int i = 0; i < 9; i++) {
            String line = scanner.next(); // 한 줄 입력
            String[] numbers = line.split(""); // 배열로 바꾸기
            for (int j = 0; j < 9; j++) {
                board[i][j] = Integer.parseInt(numbers[j]); // 숫자로 변환
            }
        }

        // 함수 호출
        solution(0, 0);

        // 출력
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                System.out.print(board[i][j]); // 한 줄에 숫자 출력
            }
            System.out.println(); // 줄바꿈
        }
    }

    // 함수 정의
    static boolean solution(int row, int col) {
        // 모든 칸을 다 채웠으면 종료
        if (row == 9) {
            return true;
        }

        // 다음 칸으로 이동
        int nextRow = (col == 8) ? row + 1 : row; // 현재 열이 마지막 열이면 다음 행으로
        int nextCol = (col == 8) ? 0 : col + 1;   // 마지막 열이 아니면 다음 열로

        // 이미 숫자가 있으면 다음 칸으로 이동
        if (board[row][col] != 0) {
            return solution(nextRow, nextCol);
        }

        // 숫자 1부터 9까지 하나씩 시도
        for (int num = 1; num <= 9; num++) {
            if (isSafe(row, col, num)) { // 숫자가 들어갈 수 있으면
                board[row][col] = num;  // 숫자 배치
                if (solution(nextRow, nextCol)) {
                    return true; // 정답을 찾으면 true 반환
                }
                board[row][col] = 0; // 잘못된 경우 원상 복구
            }
        }

        return false; // 가능한 숫자가 없으면 실패
    }

    // 유효성 체크 함수
    static boolean isSafe(int row, int col, int num) {
        // 행 체크
        for (int i = 0; i < 9; i++) {
            if (board[row][i] == num) {
                return false;
            }
        }

        // 열 체크
        for (int i = 0; i < 9; i++) {
            if (board[i][col] == num) {
                return false;
            }
        }

        // 3x3 박스 체크
        int startRow = (row / 3) * 3;
        int startCol = (col / 3) * 3;
        for (int i = startRow; i < startRow + 3; i++) {
            for (int j = startCol; j < startCol + 3; j++) {
                if (board[i][j] == num) {
                    return false;
                }
            }
        }

        return true; // 모든 조건을 통과
    }
}
